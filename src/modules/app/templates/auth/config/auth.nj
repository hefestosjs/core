import type { AuthConfig } from "@hefestos/core";
import { v4 as randomUUI } from "uuid";
import SecurityPolicy from "./security";

const auth: AuthConfig = {
  option: "session",
  table: "users",
  uniqueColumn: "email",
  strategy: {
    token: {
      secret: process.env.JWT_SECRET || "secret",
      expiresIn: "30d",
      useRedis: true,
    },

    session: {
      genid: () => randomUUI(),
      useRedis: true,
      prefix: "myapp:", // RedisStore prefix
      secret: process.env.SESSION_SECRET || "secret",
      resave: false, // Required: force lightweight session keep alive (touch)
      saveUninitialized: false, // Recommended: only save session when data exists
      cookie: {
        secure: SecurityPolicy.ssl,
        httpOnly: true, // If true prevent client side JS from reading the cookie
        maxAge: 90 * 24 * 60 * 60 * 1000, // Session max age in miliseconds (3 months in this case)
        sameSite: "lax",
      },
    },
  },
};

export default auth;
