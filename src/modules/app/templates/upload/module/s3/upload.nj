import { join } from "node:path";
import { File } from "@hefestos/core";

import { S3 } from ".";
import type { S3ParamsType } from "..";
import { cleanTmp } from "../utils/cleanTmp";

export async function upload(params: S3ParamsType): Promise<void> {
  const folderPath = join(process.cwd(), "uploads", params.folder || "");
  const filePath = join(folderPath, params.fileName);

  const key = join(params.folder || "", params.fileName);
  const body = await File.createBuffer(filePath);

  const config = {
    key,
    body,
    contentType: params.file.mimetype,
  };

  try {
    await S3.put(config);

    await cleanTmp(filePath, folderPath);
  } catch (error) {
    await cleanTmp(filePath, folderPath);

    throw error;
  }
}
